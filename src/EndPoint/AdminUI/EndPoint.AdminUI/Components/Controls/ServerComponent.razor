@inject NavigationManager NavigationManager

@if (Server is not null)
{
    <li class="pb-1" @key="Server.Id">
        @Server.Name in @Server.City is
        <span style="color:@(Server.IsOnline ? "green" : "red")">
            @(Server.IsOnline ? "Online" : "Offline")
        </span>
        &nbsp;
        @if (Server.IsOnline)
        {
            <button type="button" class="btn btn-outline-danger" @onclick="@(() => { Server.IsOnline = false; })">
                Turn OFF
            </button>
        }
        else
        {
            <button type="button" class="btn btn-outline-success" @onclick="@(() => { Server.IsOnline = true; })">
                Turn ON
            </button>
        }
        &nbsp;
        <a href="/Servers/@Server.Id" class="btn btn-link border-primary"><i class="bi bi-pencil-fill"></i></a>
        <button type="button" class="btn btn-outline-danger" @onclick="@(() => { DeleteServer(Server.Id); })"><i class="bi bi-trash3-fill"></i></button>
    </li>
}

@code {

    [Parameter]
    public Server? Server { get; set; }

    private void DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.NavigateTo("/servers", true);
        }
    }
}
